var helpers = require("../../../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegistrationView", ()=>RegistrationView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _registrationViewScss = require("./registration-view.scss");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _s = $RefreshSig$();
function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthDate, setBirthDate] = _react.useState('');
    const handleSubmit = ()=>{
        e.preventDefault();
        console.log(username, password, email, birthDate);
    };
    _axiosDefault.default.post('https://flix0051.herokuapp.com/movies/users', {
        Username: username,
        Password: password,
        Email: email,
        BirthDate: birthDate
    }).then((response)=>{
        const data = response.data;
        console.log(data);
        window.open('/', '_self');
    }).catch((e)=>{
        console.log('error registering the user');
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 36
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formUsername",
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 37
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 38
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 39
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formPassword",
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 41
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 42
        },
        __self: this
    }, "Password:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 43
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formEmail",
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 45
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 46
        },
        __self: this
    }, "Email:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 47
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBirthDate",
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 49
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 50
        },
        __self: this
    }, "BirthDate"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setBirthDate(e.target.value)
        ,
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 51
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "primary",
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "/Users/amandarivera/Flix/src/components/registration-view/registration-view.jsx",
            lineNumber: 53
        },
        __self: this
    }, "Register")));
/* return (
        <form>
            <label>
                Username:
                <input type="text" value={username} onChange={e => setUsername(e.target.value)} />
            </label>
            <label>
                Password:
                <input type="text" value={password} onChange={e => setPassword(e.target.value)}/>
            </label>
            <label>
                Email:
                <input type="text" value={email} onChange={e => setEmail(e.target.value)}/>
            </label>
            <label>
                Birthday:
                <input type="text" value={birthDate} onChange={e => setBirthDate(e.target.value)}/>
            </label>
            <button type="submit" onClick={handleSubmit}>Submit</button>
        </form>

    ) */ }
_s(RegistrationView, "pEMx6i706czEKBgfTTckB9+5jwE=");
_c = RegistrationView;
RegistrationView.propTypes = {
    register: _propTypesDefault.default.shape({
        username: _propTypesDefault.default.string.isRequired,
        password: _propTypesDefault.default.string.isRequired,
        email: _propTypesDefault.default.string.isRequired,
        birthDate: _propTypesDefault.default.string.isRequired
    }),
    onRegister: _propTypesDefault.default.func
};
var _c;
$RefreshReg$(_c, "RegistrationView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}